01-20-00 - Bat
- Found some whacky time-related code caused by the confusion over "ticks"
  versus "mudhours".  I changed some things in comm.h so we have
  SECS_PER_TICK and SECS_PER_MUDHOUR.  For affects, there is,
  UPDATES_PER_TICK and UPDATES_PER_MUDHOUR
  A "tick" is the time between regens (36 secs), a mudhour is what it says
  it is, (4 ticks to the mudhour, ~2.5 real minutes per mudhour).
- The former uses of UPDATES_PER_TICK have all been changed to
  UPDATES_PER_MUDHOUR.  This agrees with how things were defined previously.
- It looks like some of our code was thinking the "old U.P.TICK" was really 30
  mud minutes.  I would see:
      aff->duration = 2 * UPDATES_PER_TICK; // 1 hour
  I fixed them as I found them, but wasn't too diligent about looking for them
  In any event, there may be a bunch of stray *2 in some of the duration stuff
  
01-17-00 - Bat
- New code is reporting numerous database problems and core dumping during
  boot.  I put sign up.

01-06-00 - bat
- We have a ton of places in code where we pass in a pointer to a class
  and immediately check for NULL.  In C++, it is generally preferred to pass 
  a reference to the class as it is essentially the same and is impossible
  to pass a NULL reference.  I'm starting to migrate some of our functions
  that should never have NULLS being passed in to use references.
    -e.g.:   sameRoom(TThing &), inGroup(TBeing &), etc.
  - this will be an ongoing project

01-05-00 - Peel
- 3% discount for renting with an innkeeper of the same faction and not unaff

12-24-99 / 12-26-99 / 12-27-99 / 1-1-00 / 1-4-00 - Lapsos
- Modified the 'damage output' on evaluate <weapon> and the AC output on
  evaluate <armor> to display according to PC lvl VS obj level.  Figured if
  we are going to be harsh in this area we really do need to give them an
  idea of what this stuff is compared to them.
- Fixed crash bug in chiMe corpse when corpse is held.
- Fixed crash bug, more of a string overload, in 'kill blob-<race>'.
- Redid a number of things and added a few more.  All mobiles now contain
  a brtRoom(Birth Room) variable and rooms contain a tBornInsideMe and
  thing now contains a nextBorn.  What this does is when a mob is repoped
  into a room the room is stored as brtRoom and it is added to tBornInsideMe
  which is then checked for the M (max in room) check to make the check
  based on what is still alive VS what is really in the room.  This is
  controlled through the >> << operators now added to TRoom to add/remove
  from the list.  This will prevent some of the various over counts due to
  old mobs combined with the wander code.
- oedit and medit have a new field.  'resave'.  This is somewhat like my
  'edit save <object> resave' code but is mostly designed for builders.  Old
  method is still reseved for backwards compatibility.
- The advanced menu is now in place for OEdit.
- Changed 'oedit default_ac_str' to 'oedit average' and added 'medit average'
  which allows 'averge leveling' of weapons, armor and mobiles now.
- Removed 'save zonefile' and moved it to a new command 'zonefile'.
- Added the advanced menus to redit.

12-21-99 - Peel
- I've been working on some mage stuff, 'store' and 'trigger' commands,
  dealing with casting spells and such.  I alterated the doCast->doDiscipline
  path significantly, modularizing things.  Possible breakage, but everything
  looks ok so far.  Just a heads up so you know whats going on if anything
  weird happens.
- rewrote rcsls.csh as rcsls.pl.  This is an excellent example of why perl
  is so popular.  The csh version is 26 lines and completes in about 25
  seconds.  The perl version of the script is 6 lines and completes in
  about 1.5 seconds.

12-12-99 / 12-14-99 / 12-17-99 / 12-18-99 / 12-19-99 / 12-20-99 - Lapsos
- Fixed a bug in @set blocka/blockb that was not setting the ending block.
- Fixed a bug in stat that was displaying the stater's rooms and not the
  stat'eds rooms.
- Setup info skill <skill> to understand things like:
  info skill backstab
- Added purchaseMe to TRealContainer which sets the container with Empty
  Trap if it isn't current trapped/ghost-trapped.  This should fix the
  'buy bag then find a trap on it'.
- Setup the 'kill blob' for infravision killing to allow 'kill blob-race'.
- Guard proc will not trigger if mob has task or spelltask.
- Done a massive rewrite of stab.  It is now limb based, with limb damage
  and some other new things.  Also have some sever code setup but is
  currently disabled.
- Modified mobRepop and the M directive code in-code.  It will now set
  oldRoom, for noc/diu loads, to the room they *should* have loaded in.
  This should fix the large chunk of the 'vanishing noc/diu' mobs prob.
  I also set a hardCheck in tickUpdateStuff to not bother checking mobs
  currently in the noc/diu storage room.
- setCond setup to ignore immortals.
- Response Script GIVE code has been fixed up some more.

12-09-99 - bat
- created an rcsls.csh script that basically reveals what files are
  checked out, and by whom.  It's slightly better than "rlog -L -R RCS/*"
  as it shows version and person that has it checked out.

12-09-99 - Lapsos
- Removed bamfin/bamfout/longdescr from the Wizfile data.
  They are now part of the messages code.
- Move most of the longDescr calls over to getLongdesc() which controls
  the call between msgVariables.msgLongDesc and player.longDesc to keep
  everything like it was before.
- Redid the wizfile struct.  Now contains:
  office number, block a/b start/end numbers, log severity
- redit and edit are now setup to disallow a builder to modify a room
  that is not in their blocks and is not their office.
- connect.cc setup to use the office variable from the wizfile data
  instead of hard-coded office numbers.
- changes to goto:
  goto <no arguments> = goto office
  goto help = displays a series of 'useful' rooms
- Added the following to @set:
  @set office <char> <room-number>
  @set blocka <char> <start-room> <end-room>
  @set blockb <char> <start-room> <end-room>
    stat <person> will now display the 3 above also.
- Moved vlogf over to a bv setup instead of a solid value.
  In combination to the shown log types there is also 'special'
  log types: LOG_BATOPR, LOG_BRUTIUS, LOG_COSMO, LOG_LAPSOS, LOG_PEEL
  that can only be turned on by their respective owners.  Basically
  they are 'private' log outputs to just us in turn, so as to not
  spam everyone else, and also makes log checking easier for some.
  Also to simulate the old -1 log type you simply use LOG_SILENT
  which saves the log to-file but doesn't echo it to anyone online.
  All the LOG_ types are listed in enum.h under logTypeT.
- Finished the vlogf change over.  ALL vlogf lines in the code
  have been fixed to reflect the new format.  I tried my best to
  put a proper LOG_ type on each one but I expect that a good few
  past by me, considering over 1800 in total.  The large majority of
  the non -1 and non LOW_ERROR vlogf's became LOG_BUG.  A number are
  LOG_MISC and a small handful in the other types.  I can almost bet
  we will have to slowly catch any non-fitting logs and change them
  over in time.
- The new vlogf function is in place and working.  There is a switch
  statement in vlogf to control the // <stat>: line inside the function.
  I also setup a vlogf without a logTypeT that will default to LOG_MISC
  for quick entry logs.

12-7 - Peel
- added code to deal with player killing better
  specifically, player killers get an affect added, that prevents them from
  renting, entering peaceful rooms and causes them to remain visible and
  vulnerable if they drop link.  The affect is temporary.

12-7 - bat
- Enhanced the review.csh script so that you can do like:
  "review Dec 2" and see all the changes since the 2nd

12-03-99 / 12-04-99 - Lapsos
- Added 'arrowType' output to 'eval bow'
- Added 'arrowType' output to 'eval arrow'
- Changed mobile transform-limb to also check for Held objects first.
- Fixed bug that allowed a person to wither unchecked.
- AUTO_NOHARM will prevent attacking of one's own pets.
- 'chi' will no longer default to the chi'er.
- Doorbash will no longer stun immortals.
- Fumble will now initiate combat on success or crit-failure.
- Added rent cost to 'value <mob>' when in pet-shop.
- Made some slight cosmetic changes to 'info gold'
- Added: 'info gold <level>' for the level-by-level output.
- Added a new specificCode number(6) for Onslaught's zone.
- Added check in TSmoke::decayMe.  Was ending up without a
  room and crashing us somehow.
- Started work on the first of my automated-games list.
  Sleeptag will now auto-control most of the old immortal
  stuff for game running.
- Fixed up the Ghost Trap stuff.  Trouble was casting high bits
  to an unsigned char.

11-05-99 - Peel
- Added checknroom, moveto and destination response script actions.

09-26-99 / 09-27-99 / 09-28-99 / 09-29-99 / 09-30-99 - Lapsos
10-01-99 / 10-02-99 / 10-03-99 / 10-04-99 / 10-11-99 - Lapsos
10-16-99 / 10-20-99 / 10-28-99 / 10-29-99 / 10-30-99 - Lapsos
10-31-99 / 10-31-99 / 11-01-99 / 11-02-99 / 11-03-99 - Lapsos
11-04-99 / 11-05-99 - Lapsos
- Fixed problem where elementals were not draining mana when enthralled
  During any of the following conditions:
    Drunk Level > 14
    in No-Heal room
    had a bleeding limb
- Fixed the Water Elemental check to also look for objects in room
  with the fountain proc on them.
- Fixed up the wicked proc.
    Has 1 in 10 chance of triggering with 1-10 damage.
    Has messages when triggered/hitting.
    Will no longer delete itself when trying to delete victim.
- Fixed the doMortalQuest so it'll work.  Was acting backwards on
  file checks.
- Dumb Animals can no longer raise/lower/open doors.  Since closing is
  only a matter of pushing it was left alone.
- Added extra description recognition to mobiles.  Mainly used for bonus
  strings: bamfin(noc/di return), bamfout(noc/di remove), death cry,
           repop, movein and moveout
- Added a new who flag: -y
  Reports, in -l format, who is Not grouped at current.
  Will only show those people not affected by the AFF_GROUPED flag.
- 'Auto Tips' has a new function for immortals.  Now if it is set and
  you are in immortal form you will not see tips but instead get advanced
  menus for the medit/oedit/ect... Editors.
- Fixed bug in paralyze limb that allowed a person to paralyze unchecked.
- Removed auto-pouch and auto-join from the initial auto flags.
- Modified the score/attr-cond affects output to no longer display failed
  sneak attempts.  Was able to use this to keep sneaking until success.
- Added material types Elven Mail and Elven Steel.
- Added no-argument help to the prompt command.
- Shopkeepers can no longer contract diseases.  Was being abused by using
  pets and stealing from them.
- Non immortals can no longer steal from shopkeepers...Ever.
- There is now a report on when shopkeepers die.
- When a mortal uses the 'visible' command and they do not know the spell of
  invisibility they have a 10 in 11 chance of perma losing the affect.
- power <person> will now check for a .wizpower file on person should they
  not be logged in.  Basically allows power checking of un-logged in
  immortals and such.
- Setup the hit/damn check to not error under the following:
  Object is an Arrow
    --or--
  Object is a Bow
    --or--
  Max Exist <= 3
- Started work on spec_mobs_doppleganger.cc  Currently not hooked into the
  code but adding entry to let anyone who still reads this knwo what it
  is if you are curious.
- Modified MakeCorpse to realize when it's adding a corpse to a Null room and
  move it to storage instead.
- Added non-pc check in encamp to try and catch the overloaded isAffected
  stuff.
- Added 'show races <text>' ability.
- New Obj proc 'Lightning Rod'.  Reacts under:
  If Hitting
  If Hit
  Generic Pulse
  Stuck In
- Fixed the 'checklog "string" log' to work properly with:
  checklog "two arguments" logcurrent
- Added showModifier to TContainer to show condition If object can be worn
  on the body, outside of the hands.
- The jump social is now also a command located in cmd_jump.cc.  It is now
  setup to be usable like:
  jump bridge
  in sanctioned rooms to have a teleport like affect, with applicable damage
  when appropriate.
- Component skins will now force the corpse to no-skin.
- Loadset will now accept !clothing as slot options.
- Can no longer 'light' magical items.
- Also added to the whittle list.  Next just need to get the actual wood
  loading. *sheepish grin*
- Loadset will no longer count 0 armor level armor towards total suit level.
  This will fix up the suits with the 'charms' and such in them.
- If a mage mob loads a spellbag through loadset then it will be used as
  their spellbag instead of the normal small/medium/large ones we load.
- Made 'reset zone' default to current zone.
- Redid chi some.  Logic and such is still the same only now the stuff
  is controlled through a set of chiMe functions given to each chiable
  thing.
- Added some items to the chiable list.  Current:
  TLight, TFuel, TOpal, TBaseCup, TFood, TPortal, TSymbol, TCorpse, TFFlame
- Modified the get() function and routines to put a general gag on
  component output when getting from spellbags.  This is currently in
  testing so it won't actually do anything atm.
- Added new option to edit: edit list
  Will crudly go through the rooms file, or rooms_2 file, and display all
  room numbers and their room title.  Mainly useful for lows and:
  as <so-so> edit list
- Added some new stuff for traps.  There is now a possibility a thief will
  'think' they see a trap when one doesn't exist, this is controlled through
  a container flag to avoid constant occurance, and also a chance that a
  trap will fail to go off, become a dud.  These only work for containers.
- If an object is added to a pet whom has a master then the master's name
  goes on the owners list.  This was being used to loot with pet and
  transfer goods to another PC in the same account.

09-23-99 - Cos
- Disabled GOLD_INCOME modifier from actually being used, although
  it will continue to float.  Took out Peels short term fix at same
  time.  Bat, can you look at the economy here and explain what you 
  think is going on.
- Fixed some crash bugs in object spells. Some other crash bugs  seem
  to still be in mud.
  
09-12-99 - Cos
- Moved code and ran into some errors including the crash error that went
  out over email from Damescena.  I fixed a few of them but still not
  sure its stable. I put it up on old exectuable till have more time
  to test.
- Fixed crash bug in Polymorph

08-10-99 - Brutius
- Changed get_pc_vis_world to get_pc_world with a bool visible argument.
  Defaults to TRUE in handler.h header file.
- Added argument to doTell for visibility purposes. Defaults to TRUE in the
  being.h header file
- Changed reply to work regardless of light with new visibibility code
- Added TAR_CHAR_VIS_WORLD for spell bits, to distinguish between worldwide
  spells that need visibility and those that don't
- Changed summon, astral, and portal to work regardless of light

08-05-99 / 08-07-99- Lapsos
- War will no longer make players attack other players.  This is just like
  a normal death, and in most cases an uncalled for slaughter.
- 3 new script commands:
  pulse { "";
    Is executed everytime the makeNoise function is called.
  checkroom <room>;
    Will verify that the mob is in <room> or stop parsing.
  checkzone <room>;
    Will verify the mob is in the same zone <room> is found in or stop parsing.
- Added:
    doVisible()
    doMortalInvis()
  Allows a person to switch from invis/vis at will.

08-04-99 - Lapsos
- Fixed a typo in cmd_stab.cc that was acting as if you didn't have a
  weapon when you did.  Thus making stab undoable.

08-04-99 - bat
- created canBackstab, canCudgel, canStab to centralize the check for
  appropriate weapon type, and volume.  Applied it to the appropriate
  skill code, and the describeOther stuff since they were not in synch before.

08-03-99 - Lapsos
- Made some massive changes to dissect for !prod.  Don't expect it to
  work that well for now.  Code should be unseen/unused on prod.

08-02-99 - Bat
- Added a suggestedPrice func for TFood
  lowCheck was already enforcing a price, but just moved existing formula
  into what is becoming the standard function for this sort of stuff.
  Unfortunately, item-decay plays a part in the formula and found a few
  items with decay=-1.  Made a slight correction to remove the price < 0
  foods, so expect a few LOW errors.

07-31-99 - Lapsos
- Changed the CMD_RESP_DUMMY in cmd_stat.cc to CMD_RESP_PACKAGE, looked
  like that was the one used to replace it.  Also changed the one in
  parse.cc the same.
- Added some test code to see how list/buy funcationality will work for
  script mobiles.  Formats are:
  list { "<type>";
    list { "";
    list { "dinners";
  buy { "cost index name";
    buy { "10 1 dinner-steak";
    buy { "20 2 roast-ham";

07-30-99 - bat
- Yet another checkmark in the long list of cheesy semantical changes...
  I reviewed all uses of the word "mantra".  It appears a mantra is a 
  spiritual prayer, so if we were using it for mages, I changed it to
  "incantation" instead.
  I didn' look at the tinyfiles though

07-29-99 / 07-30-99 - Lapsos
- Setup a check in doShoot to try and prevent people from using elementals
  and such from shooting for free xp.
- Fixed an oversight in doWorld.  If you did 'world' immediatly after logging
  in from a fresh crash/boot it would try to do a 0/0 for the lag counter.
  Standard divide by zero and such, gotta love it.
- Some new test code in for !prod for the sell command.  Don't be surprised
  if it acts really strange for awhile, not active for prod.  Working on
  making all the object manipulation functions much smoother and similar.
- Made the spells/prayers commands ignore closed bags so they don't mislead
  people.

07-29-99 - Brutius
- Took out the code that sent all client messages and faction message to all
  immortals

07-28-99 - Lapsos
- Added another check to my suspend code on scripts.  Now it will make
  some logical checks to see If it should break out instead of Always
  breaking out.
- Started working again on SEdit.  Free time is still a bit scarce so
  will have to do this over time.  Hoepfully I can at least activate the
  command line part of it in the very near future.

07-26-99 - Batopr
- moved the reconcileDamage(.., 0 dam, ...) calls done in spells to make
  fights start out of the spells, and into doDiscipline based on whether
  TAR_VIOLENT was set.
- Also moved the "senses your offensive magic" stuff out of each spell and
  made it based on TAR_AREA | TAR_VIOLENT.

07-26-99 - Brutius
Implemented some of the user ideas:
- Made retreat have a chance of keeping you on your mount
- Made elementals have unique "corpses"

07-24-99 / 07-25-99 - Lapsos
- Modified doClients.  Was using a 1024 char which was getting filled up
  pretty fast.  Changed it over to use a string instead.
- Modified the faerie fog code to remove the entire affect, not just the
  affect flag, on success when appropriate.
- Modified the bank code so it will not simply deny when you do:
  deposit all/amount
  While when all/amount + in-bank exceeds limit.  It will now deposit up
  to the limit.

07-23-99 - bat
- mapped purple monk quest.  Doc avail on website.  Some minor fixes after
  debugging.
- Mapped 1st ranger quest.  Some minor fixes from debugging.  Doc available
  as soon as I do finishing touches.
- renamed some of the constants for toggles.  Form should be:
  TOG_(quest)_(specific)
  So that we can grep TOG_(quest) and see all places where we do something
  for that quest in the code.
- added potion of characteristics, that will raise a chosen stat by 1 point.
  These load like the youth potions (rare, random mobs).  The stat it raises
  is determined randomly in the loader routine.

07-22-99 - bat
- overhauled generic_dispel_magic adding some that were not being checked
  for.  Also put it into a loop format rather then the successive checks
  that made this function fairly large.

07-20-99 / 07-21-99 / 07-22-99 - Lapsos
- Played a little with my 'show <components> <spellname>' code:
  Now if you specify a spellname it will also find and tell you:
    disesction loads (only those in the dissect file)
    nature loads (room loads, ect...)
    script loads
  Now all but script loads will work on prod, script will only work
  on non-prod because it reads and checks Every line in Every script
  for the value in question.  In testing this was done both slow and
  fast but I think it'd be best to leave it on !prod for now.
- Added a new task and skill:
  task_stavecharging
  SKILL_STAVECHARGE
  It loops through the doCharge function and allows a staff to be
  'recharged' for a very heafty fee.  Placed the skill in mage
  Alchemy.
- Modified the checkResponses a little.  It doesn't change the way it
  is called or anything just created a pre-function that will check
  for task and 'suspend' it if one exists and re-enable it afterwards.
  This should fix the whole problem of quest mobs casting and such.
  It will susped both 'task' and 'spelltask'.
- Re-Disabled the check in the Stave Charge code.
- Fixed a multi-show bug and crash/inf-loop bug in farlook.
- Added some test code to make two-handed weapons more dynamic.
  Currently only active on !prod:
    Allows large races to hold normally small two-handed weapons in
    one hand.  Also allows small races to hold normally large one-handed
    weapons in both hands.  Also added 'both' to the:
      wear <object> <right/left> directives.
- Added objs/ and bat_objs/ to the exclude check in backup.
- Changes to components (only active on !prod for now)
  Merge code re-activated.
  splitMe functionality added to TComponent
  Shops setup to sell/list in charges

07-19-99 - bat
- added body_ant
- Added rideable to amphib, reptil, snake, arachnid, insect and ant
- added Fourlegged to retile, arachnid and insect and ant

07-18-99 - Lapsos
- Added a new field to show:
  show created <materialize/spontaneous> <itemtype>
  Which goes through the db and displays all objects that could be
  created through the spells.  A floor value check is in place to
  prevent materialize objects from also showing up on spontaneous to
  keep the output seperate.
- Added a newline after the telepathic message line in telepathy.  Was
  causing 'The message is...' to appear on the same line.
- Added a new field to show:
  show <components> <spellname>
  Which goes through the db and displays each component, there respective
  spell, and how many charges they have max.  The mid-display letters
  stand for:
  D = Decays           B = Brew Comp           S = Scribe Comp
- Added ITEM_WINDOW to the deny list for mater/spont.
- Made some modifications to as.  Now if used by a creator it will modify
  you're name, execute the command, then return you're name to you.  It
  works through a isSanctionedCommand check, which currently only allows
  medit/oedit/sedit/redit/rload/rsave, and denies using names that belong
  to other creators.  More or less it's a LOW's way of checking and looking
  from within the mud on another immortals work.  After a little testing
  I'll make the to<->from method a bit better, as is it's simply a delete
  player name, copy, delete player name, copy format.  When used while
  switched it will react depending on the name you give.  Ex:
  as lapsos look (old style as)
  as armagedon medit list (while switched, will work as if I wasn't)
- Fixed a bug in alchemy_create_deny that was changing all zones to disabled.
- Fixed a bug in alchemy_create_deny that was causing all items to be seen
  in disabled zones.

07-16-99 - bat
- made materialize/spont. check for disabled zones
- changed lapsos's checks on "74" to use ROOM_NOCTURNAL_STORAGE instead
- changed "int isSpammyRoom()" to be "static bool isSpammyRoom"
- made some refinements to doObjSpell so it does target validation at
  the top of the function, rather than per spell
- tweaked canSwim to better handle garmul's tail
- added a few missing spells to doObjSpell (protects)
- added a function called makeOutputPaged which basically pulls data out
  of the output buffer, cats them together, then does a page_string on them.
  I applied this function to list_in_heap() as looking in a VERY full bag
  was spammy.

07-14-99 / 07-16-99 - Lapsos
- 2 new weapon procs at the request of Armagedon:
  1. Blinder Weapon : Very Very Very low chance of causing blind
  2. Mana Drainer : Very Very Very low chance of draining 1-10 mana from
     a target and giving it to the player.
  Both have 2 checks to pass, both incredibly slim, to work.
- Modified goto/at to yes forcing on room 74.
  goto <74/[mob in 74]> yes
  at <74/[mob in 74]> yes <command(s)>
- Mounting under level will no longer instigate a fight.
- For Deikhans with 'ride winged' above 70 it is now possible to coax a
  mount into landing before mounting.  All performed through:
  mount <mount>.

07-15-99 - Bat
- Rolled the useComponent stuff into bPassMageCheck.  It will only check
  for a component if a COMP_MATERIAL thing is set in the discArray
  info

07-14-99 - Cos
-  Coded in retrain pet.  This will also form basis of befriend beast.
-  Reduced the power of all pets to pc scale. I think its a reduction but
   seems very reasonable.
-  Fixed a few new crash bugs in @set character. This may still be broken.
   Just fixed first 2 then had to go.  Will try to test and release mvcode
   late tonight or Thursday. Tested late and should be ok
-  Code should be moveable again. Tested most of my code and no apparant
   errors. Let me know if I missed anything.

07-11-99 / 07-13-99 / 07-14-99 - Lapsos
- Added the script command 'loadmob'.
  Currently checks for:
    Shopkeeper and newbie helper specs on loaded mobs, and deletes if they
    are.
  Ending result is mob is placed in the room, no charmie/pet code attached.
- Fixed the mob_loader.cc to compile.
- Fixed the components.cc to compile.
- Made a number of changes to pets.cc to compile.
  I also went ahead and added it to the Makefile so the general p*.cc call
  to bmake.csh would be plausable.  Sorry about that.
  Add changes are commented in both pets.cc, being.h and monster.h
  being.h and monster.h just look for: // pets.cc
- Fixed a problem in ai_responses.cc that was causing:
  'load <blah>'
  to act like:
  'loadmob <blah>'
- Made some initial changes to the damage formulas to charge.  At the moment
  they are only active on beta/alpha.  Now mount level is taken into account
  and there is a chance for a crit, with very little damage addition it's
  more mouthy and flashy than useful.
- Fixed a bug in disc_alchemy.cc that was causing everyone to go into brief
  mode when someone did a farlook.
- Fixed farlook.  Changed doAt(const char *) to be doAt(const char *, bool)
  because farlook uses a doAt call to do it's bit.  So added a bool for
  'isFarlook'.

07-09-99 - bat
- removed a number of the unimplemented skill/spell defines from spellNumT
  enum.  Where we had code snippets associated with those spells, I commented
  the snippet out.

07-02-99 - bat
- added a number of new moneyTypeT, which basically subdivide the old GOLD_SHOP
  better.  This basically allows us to see how much is spent on each of (armor,
  weapons, components, symbols, food, response-shops, pets)
- improved logic on fluxuating economy to take new gold data into account

06-24-99 / 07-01-99 / 07-02-99 - Lapsos
- Few changes to support the 'save zonefile' code:
  1. The room operator++ function will now strip a mob of all 'prototype'
     objects it may have if moving to an enabled zone.
  2. A new function and power in place to allow builders to 'outfit' a mobile:
     doImmortalOutfit(string) : called through doOutfit(const char *)
     POWER_IMMORTAL_OUTFIT    : set through "mobiles" in the powers.
- Modified the loadset code a little.  The class output for the suits/pieces
  should report correctly now for all classes and a new extension:
  load set info <class>
  to display all suits wearable by <class>
  load set info human thief
  List all suits with at least 1 thief piece in it that is human.
  load set info human Thief
  List all suits that are fully thief wearable and are human.
- Modified the addFollower code to append to the end of the list instead of
  at the head.
- Setup the TBandaid::removeMe to use the common removeMe if the limb in
  question was not bandaged.  This will fix the materialize + junk bandage
  bug.
- Setup wordOfRecall to fail when cast on immortals.
- loadsetCheck will now make a check for the 'load noprotos' power and set
  the eq prototype if needbe.  This was a remnant of when we didn't give this
  ability til much later in the levels and apparently was never realized.
- New material type 'Terbium'.  Added a the request of Armagedon.
  Basic metal, mostly like the others.

06-22-99 - Cos
- My enabled code looks stable. Ill monitor the mud for problems if you
  want to move code.

06-21-99 - bat
- switched some arrow/bow functions that were like:
  isScraped, isCarved, ...
  These should have used the standardized
  isBowFlag(BOW_SCRAPED) instead for consistency with the form of other checks

06-18-99 / 06-19-99 - Lapsos
- Updated wizPowerFromCmd() to account for the below change in powers.
- Modified:
    str Icy Grip
    str Cure Poison (critical failure)
    str Poison
    str Food Poisoning
    str 'chlorineEngulfed'
    str 'poisonHit' [spec_mobs]
    str 'poisonWhip' [spec_objs]
    str 'poisonSap' [spec_objs]
    str 'trapPoison'
    dex 'rawBlind'
  All were subtracting 2 of the noted type, cept rawBlind which was doing
  -1 and -3, so I upped them to 20/-10/-30.
- Modified the festure code in disease.cc to increase the mobs anger each
  infection pulse.  This won't stop our lovly acts but should catch a few
  off-guard.

06-18-99 - Bat
- switched the following to use the sort() algorithm
    zones command, spells command, prayers command
- converted last few imm-commands to powers
- Removed definition of "BRUTIUS"
- switched some code that was dealing with range of player-levels to use
  MAX_IMMORT (instead of GOD_LEVEL10)
- A number of commands that were "being developed" and had been set to high lev
  for duration, I added a basic check for POWER_CREATOR rather than making
  a temporary power for them.  Applies to things like:
    testcode, testfight, bruttest, capture, release

06-12-99 / 06-13-99 / 06-15-99 / 06-16-99 - Lapsos
- Added the field 'paired' to the shop list stuff.
- Messed with the 'You increase your master of ???.' message and made it 3
  different ones depending on if it's a spell, prayer or other.
- Fixed a bug that was causing 'save zonefile' to save door status in
  reverse.
- Went through and converted all the:
  .type = 0;
  Affected errors to:
  .type = TYPE_UNDEFINED
  Since I'm not sure if this is correct/incorrect i'm noting it here.
- Added a new field to the mobile response stuff 'respMemory' also adds a
  new class at the same time.  Holds (cmd, name, args) for quest memory.
  Currently only keeps track of excess money given to a quest mob so a
  person can give 200 followed by 300 to buy something that is 500.
- I went ahead and cut a little of the spam out of the make process.
  If this is not liked it's easily fixed.  Just remove the:
  @echo Making \"$<\"
  and the @ on the next line under .cc.o: and it will be back to normal.
- My latest disaster, errr, creation is in place:
  cmd_sedit.cc
  Which is a mimic of the medit system for online creation of response
  quests.  Currently disabled to all but me for testing.
- Fixed all the:
  level *= (modifier * level);
  'Make us some psychotic elementals' bits in magicutils.cc
  But.  At level 59 I was making earth/water elementals at nearly 2k HP
  so might need to seriously tone down there hp at the upper levels.

06-11-99 - Bat
- Switched skill/spell stuff over to an enum spellNumT
  this was a big switchover, and i'm not fully completed with it
  also, totally untested, and I suspect I need to do some more changes before
  it will compile or boot.

06-11-99 - Lapsos
- Modified the 'See thru door set secret' check to understand if the
  door is just open or is actually 'see thru' and will give a correct
  error depending.
- Modified the has_key check to also understand Snums to allow oedit
  loaded keys to be used.
- The 'save zonefile' code will now copy the zonefile output over to
  the calling immortals output file for on-line viewing.

06-08-99 - Batopr
- Added 4 new symbols for act() that deal with plurality of items.
  $q returns is/are for $o and $p "$o $q destroyed"
  $r returns is/are for $n
  $Q returns "" or "s" for verb modification of $p/$o  "$o look$Q damaged"
  $R returns "" or "s" for verb modification of $n

06-07-99 - Lapsos
- Modified my prior change to CheckForMultiplay to deny instead of
  removing the linkdeads.
- Modified my TMessages::initialize to use a custom string reader instead
  of the current fread_string, which messes up the strings for TMessages.

06-03-99 - Cos
- Started attacking various aspects of pets.  My code should be commented
  out while Im away this coming week.  If I missed a place, just comment
  it out.
- Part of change (commented out) is old age death for mobs with 0 exp and
  no stuff.  This is for abandoned pets and stuff to make sure that people
  dont kill for no gain not knowing.  If anyone can think of a reason not
  to do so, let me know.

06-03-99 - bat
- converted "command" command to use C++ sort algorithms

06-02-99 - bat
- added get_best_char_room that takes optional arguments for visible and infra
  it checks for exact match, followed by abbreviation
- cleaned up many redundant functions wher we had both a:
  get_char_room_vis and get_char_vis_infra by sending an optional argument
  for infraTypeT to the function.
- the infraTypeT floats down into sub functions, ultimately going into
  canSee().  I got rid of the lest vestiges of canSeeInfra since all it
  did was call canSee with the infraTypeT anyway.

06-02-99 - Lapsos
- New command, structure and pfile.
    doMessages() : command
    class TMessages : holds a variety of strings that will be used in-game.
    *.strings : file that holds the strings.
  K.  I considered making this part of the wizfile but since it would be
  easy to Also use this for mortal strings I decided to use another file.
  Mainly it allows for many strings to be dynamically designed in-game and
  also saved dynamically so doesn't require a convert if new additions are
  made.
- A check in base clothing added for 'isBarding'.  Will be used to dictate
  mount-wearable EQ.

06-01-99 - bat
- for clarity, I changed some "bool exact" parameters to be exactTypeT
  which is either EXACT_NO or EXACT_YES
  It's easier to understand what
  is_abbrev(..., EXACT_NO) is doing than  is_abbrev(..., true)
  the enum just rolls over to true/false so no code changed
- ditto for multipleTypeT that replaces some "bool multiple" things
- finished up modification of spellInfo putting in the enums for start/learn
  on the learn-by-doing stuff.  Easier to read the code now that is isn't just
  a series of seemingly random ints.

05-31-99 / 06-01-99 - Lapsos
- Modified the zones command so it displays each successive line in
  'line by line' different colors.
- Modified the fpos code for beta.  The world-file was set to .wld which
  was throwing the fpos reader out of whack when someone modified the world
  file so it's using the .use file again through a local variable in
  room.cc.
- Commented out the prompt = -1(DONT_SEND) in the client-prompt updater.
  This should re-active the tank/timeout prompt for client users again.
- The following spells were setup to be self-castable without target:
  detect magic
  accelerate
  feathery descent
  stealth
  gills of flesh
  detect invisbility
  falcon wings
  flight
  trail seek
  true sight
  Through the TAR_FIGHT_SELF flag.
- Modified checkForMultiplay() so it takes care of people who login PCs when
  they still have linkdead ones online.  It won't prevent login, just force
  the other ones into rent.  It will ignore immortals with multiplay ability.
- Modified 'look <dir>' and 'exits' to take into account the exit sloped
  status and report it.

05-30-99 - Bat
- fixed old problem in junking notes.  If the note is a ticket, it should
  erase the repair file, and update teh count for the item that it was a
  ticket for.  Previously, I think it was letting the 15-day-repair-delete
  nuke the repair item, and reboot would fix the count.  Should be fixed
  now.  There was also a crash bug in here, that I fixed.

05-29-99 / 05-30-99 - Lapsos
- Modified the 'wizlist' reader to now load up the powers file and work off
  off that.  Kind of fear that this might get to be incredibly spammy so will
  probably need to be formated better.  Old wizlist code is still in place
  only commented out for now.
- I was correct.  It looked horrid.  I modified it to place 6 names on a line
  in a spacing of 13 chars.
- Added a new skill to adventuring skWhittle.
- Fixed findComponent so it doesn't allow belt use if you only have
  'no-gestures'.
- Both the code that was causing the newlines and the removal of the last 2
  characters on affects are fixed.
- Fixed a crash bug in bload.
- New function in TObj and in TComponent.
    int noteMeForRent(string &, TBeing *, TThing *, int *)
  Used when creating the note in makeRentNote.  Currently used to compress
  component output from inventory/containers:
    An eel's tail : 800 talens/day  [x  5]
- I also modified the formatting for the rent notes so that it understands
  when color codes are used and realigns properly.  Also added the total items
  and other such information to the top of the notes.
- When a mob goes to leave his master, gets smart and goes, instead of just
  making them hate the caster a check is made:
    ::number(-(master-level), mobile-anger) <= 0
  If passed then they will simply go away.
- Modified the switch/brawl check from !(0, 17) to !(0, 31).  This was happening
  way too much.  Also added a check to the brawl so that there is a lesser chance
  of brawling someone involved in a task.  Based mostly on focus.
- SECT_ASTRAL_ETHREAL is now checked for in 'bool outside' and will prevent it
  from returning true.
- Modified the '$n yawns as $e returns to The World.' message to try and find
  a common ground: '$n (moveIn text) to begin work.'
- Changed 'CLOUDS' to 'FOG' in the scan messages.
- Setup materialize/spont-generation to place the first of the items created
  in the caster's primary hand if it's free.
- Slight modification to 'prac disc/skill' to display more technical information
  on the skills.

05-28-99 - Bat
- added affectedData::canBeRenewed so that checks can be done consistently
- added affectedData::shouldGenerateText which can be used to suppress multiple
  text messages when one "event" sets multiple affects.
- got sick of trying to decipher the spellInfo ctor.  Swapped a bunch of 
  "const int" to enums, and changed ctor to only take the enum.

05-28-99 - Lapsos
- Threw together:
    wizPowerT wizPowerFromCmd(cmdTypeT)
  function now found in info.cc.  It will return the power that controls the
  command primarly.  Not sure if I got them all or even got the ones I got
  correctly so will probably need to be checked.  Currently used by doWizhelp
  to list out only those commands an immortal has the powers for.
- A new task added.  Currently it is disabled until I get the rest of the
  items I need for it.  'task_whittle.cc / task_whittle.h' is a task to
  create wood objects, from a pre-set list.  Currently it is setup to
  allow the following things:
    Rangers:
      2 types of arrows, 2 types of quarrels, 2 types of bows,
      2 types of crossbows and 2 cannister types to be used in applied
      substances
    Anyone:
      toy boat, training staff, training sword, a simple chair, chest,
      wood shield, small box, wood ring, wood club
      [All armor & weapons are sub-quality]
    For most of the 'other stuff' the task is quite long:
      ((objWeight + objVolume) / 25)

05-26/27-99 - Peel
- Created TDrugContainer and TDrug, basically copies of TLight and TFuel.
  These are for smokeable drugs.  I'll be adding more stuff to them.
- TFuel (and thus TDrug) had a divide by 0 bug in getTotalWeight and
  getVolume.  They both divided by max fuel/drug.  Fixed it.

05-26-99 - Bat
- Abstracted TLight into TBaseLight and made TFFlame derive from base_light
  rather than light.  I think I royally screwed up the shared functionality
  so if someone that knows how a flame is different from a light could
  look it over, and either let me know, or just go ahead and fix it.
- fixed up a failed personalizing check

05-25-99 - Lapsos
- Modified doLevels a little.  If it displays a level that the player
  already has it will display in green.  But will continue displaying
  unlearned levels in orange.
- Moved the suitset init to right above the zone table renumbering so
  the suits are loaded before the zonefile 'Y' commands.
- Modified setTitle.  Now if doing a standard 'levelup' title change it
  will only replace the; 1st, 2nd, 11th, 34rd, ect...  And leave the
  rest alone.  If none of the upper are found it simply won't change
  any part of it.  It is still setup to reset the title when required.

05-24-99 - bat
- changed doLow() to use stdc++ preferred mechanism for sorting a list.
  We basically use the sort() algorithm defined in <algorithm> with some
  user-defined predicates for defining the ordering.
  I applied it to lowObjs with lowWeapons and others to follow.

05-22-99 / 05-23-99 / 05-24-99 - Lapsos
- Removed the promptual differences between non-term and ansi|vt100.
- Modified the TSeeThru::getTarget().  If the target room is a negative
  it will search through the object list for any objects with a vnum ==
  the -getTarget value.  If 0 are found it will return -1, if 1 is found
  it will return that objects room.  If more than 1 are found it will
  choose a random one and return that objects room.
- Fixed my messup that was causing exp and exp_tolevel in the prompt to
  look very odd.
- Fixed up doBload to remove the primaryheld object if it matches the
  bow name, thus allowing loading while wielding your bow basically.
- Continuing my changes to the prompt system and such the ansi/vt100 bar
  have been changed over to a togglable addition: prompt bar
- Added a new field to TObj   string displayFourValues()   which is called
  by the oediter to make the display of certain objects prettier.  It
  creates the:  Curre values : ? ? ? ?

05-19-99 - Mithros
- Bumped Max Exist modifier to .8 from .6 & reduced load modifier
  to .8 from 1.0.  Will be playing with this a bit on an upward
  movement to raise max exists and lower loads.  Seemed what most
  wanted to do.

05-18-99 - Lapsos
- A new power in the immortal 'save' command.
  save zonefile
  Will create a really basic zonefile then email it to the account email
  addr of the user.  Creates:
    header, door status(closed/locked), Objects in rooms, Objects in Objects,
    Mobiles in rooms, Objects in Mobiles and Objects equipped on Mobiles.  It
    also determines difference between 'O' and 'B' loads through the ITEM_TAKE
    flag.
  Doesn't Understand:
    Currently it does not understand objects in object in/on mobiles.  Not
    does it attempt to simulate ? or loadsuit commands.
- Fixed a error of mine in create_rooms.cc that was reporting bad location
  in room_edit when it wasn't actually a bad location.
- Fixed doMortalQuest.  The check to allow immortals to do 'quest <qnum>' has
  to be a level check because if they are isImmortal() then they will perform
  the immortal quest command.

05-13-99 - bat
- I bumped the WORLD_SIZE up to 40K (from 30K) since it looked like we were
  about out of rooms for builder assignments.
- fixed rename to restring personalized objects.

05-12-99/05-13-99/05-14-99 - Lapsos
- As per miths request level 51s are now forced invis/stealth.
  Level 51s will also not get an eq listout when looking at a mob.
- I modified the doMortalQuest command a little.  Now if a quest bit
  is not found before the final 'no help' message it will go backwards
  through the quest bits on the player.  If a bit is found as set it
  will attempt to read: lib/mobdata/responses/help/bit_number
  and display it to the player.  Should be an easier way of giving
  players quest assistance.
- Modified switch: switch load <mobile>
  Will load <mobile> (with checks to not load shopkeepers/newbieHelpers).
  Place the <mobile> in the callers room then pull a standard switch.
- Modifed rsave/rload:
  rload backup <2> <standard>  To allow a builder to restore a rsave backup
                               or the common backup file.
  rsave backup <2>             To create a non-standard rsave backup file.
- Modified the doMortalQuest a little more:
  For Mortals: quest <num>  To get help on there <num>th highest quest flag
  For Immortals: quest <qnum>  To view the help on the <qnum> quest flag.
- Modified the save command for immortals:
  save <thing> <number>
  Will look at <thing> and send the command to either doMedit or doOEdit as
  a save command.
- Added the setDescr/getDescr functions to the TRoom class and made some
  modifications to them.  Now if loading from the tinyfiles the room descr
  should be defered to a descPos location instead of the entire description.
  It will still record the description itself on production for now.
- It is now possible to 'put/get' lanterns in/from boats.  Mainly it's a
  sudo 'Attach' looking method but it will allow the lantern to be put on
  the boat and all light checks on the boat should return boat + lantern.

05-10-99 - Bat
- Recompile failed at -O2, trying at O4
- Changed charList from char name[50] to const char *name.  It'll use
  mud_str_dup to populate and has a delete [] name in the dtor.
- -O4 booted "ok" in that it came up, but numerous problems from the L.O.W.
  errors that should not occur (fish (an orc food merchant) found out of water).
  I'm going to regard O4 as a failure too.

05-09-99 - Bat
- recompiled OK at -O1 level.  Tried upgrading to -O2 now.
  at -O1, numerous L.O.W. errors about prices shifting +-2 talens
  I think the floats shift a tiny bit from the optimize so this is ok.
  I won't bother fixing them until we settle on an optimize level
  at which point, a quick rewrite will occur to fix it.

05-08-99 - Lapsos
- Added the script command 'checkmax'.  Will stop parsing if passed object
  is >= max_exist on it.
- Added the Sloped_Up/Sloped_Down exit flags.
- Created a quick function called 'comify(char *)'.  Will add commas to a number
  with proper omitting of the decial places as comma counts:
    1221583.33  becomes 1,221,583.33
  Currently tied to current xp, session xp and xp-to-level in score.  The xp
  printouts in doLevels and cur-xp/xp-to-level in the prompt.

05-07-99 - Batopr
- changed the new loadset stuff so that it populates the set database prior to
  resetting zones.  all 'Y' commands were being skipped previously.

05-06-99 - Lapsos
- The loadset code is completely redone.  The suits are now listed in an
  index like map form and the numbers themselves are now stored in:
  lib/objdata/suitsets
  When loaded in an average level is also calculated for each now.
  Also a number of new abilities:
  load set                    : display all current sets
  load set <suit> <limb>      : load only the <limb> piece for <suit>
  load set information <type> : 'load set' with extra information.
  <type>: <race>,  <missing>, <suit-name>, <level>

05-03-99 - Peel
- Can crawl in/under water now.  This is necessary to be able to enter short
  rooms from water sectors.  Think of it as dog paddling.

05-02-99/05-03-99 - Lapsos
- Threw together 'egotrip cleanse' real fast.
  Will cure all 'DISEASE' affects on all mobiles And players.
- Finished 'doMortalCompare'.  Gives comparative information about two
  objects.  Nothing fancy, just allows them to determine what might be
  better for them.
- Various changes to the ranged proficiency:
  Required to shoot dropped to 10 from 15.
  Required to shoot random dropped to (0, 30) from (0, 50)
  Learning rate of SKILL_BOW knocked up to 3 from 2.
- Setup the hospital buy code, only for the doctor part, to auto-deduct
  cash from a players bank if they don't have enough to cover the charges.
  Assuming there is enough in the bank also, that is.
- Fixed 3 crash bugs in connect.cc.  We were still using the fstream to
  display the SIGN_MESS on wizlock which was causing albootbeta to bust.
  Just move the check to a FILE type.

05-02-99 - Peel
- When autolooting, if the corpse is not accessible, the message will say
  "corpse" instead of the full keyword list.
  You do not see or have the goblin-guard-type4.
  You do not see or have the corpse.

04-25-99/04-27-99/05-1-99/05-2-99 - Lapsos
- New casino game: Crazy Eights
  Currently it points to my office(48) until a place is found for it.
  4 Players, common rules used.
- Replaced the formulas in setDefArmorLevel so they return solid values.
- rload and rsave can now be used as:
  r---- <start> <end> <block>
  Where block can be omitted(1) or 2.  Basically allows them to have 2
  room blocks in there directory.
- New casino game: Draw Poker
  Crazy Eights now points to room 1 and Draw Poker room 2 until homes
  can be found for them.
  2-6 Players, common rules used.
  Not fully tested at current.
- Changed unlock to be allowed during combat again.  But unlocker gains
  5 rounds of cantHit.
- Modified the common swallow proc again.
  Will have a !::number(0, 20) chance in actually swallowing VS just
  doing (mobLevel * 3) damage to the player.  Will also apply 5 rounds
  of lag to the mob regardless of if it's a swallow or a bite.

04-22-99 - bat
- converted +tohit for mobs, should be good to go with assumption of
  +0 tohit as standard assumption now.
- Put a char * field on TObj called owners.  TPerson += TObj will check
  owners vs the PC's name to see if a previous owner was someone else in
  PC's account.  A log showing item-transference will be logged in this
  situation.
  owners field is not saved (obviously)

04-22-99 - Lapsos
- Modified bload so it will check for worn/carried quivers if the arrow
  is not found.
- Changed TQuiver to be a version of TExpandableContainer so it will
  actually work as intended.
- TBow(FV3) and TArrow(FV4) both have a new field 'arrowType'.  Will help
  in keeping bows/crossbows/blowguns/slingshots fully seperate.
- Removed TBow(FV1) arrow_num and changed it so the arrow itself is stored
  in bow.stuff instead.  This way we preserve any 'enhancements' or such
  afflicted upon the arrow.

04-15-99 - bat
- Modified the formulas for +tohit on clothing and weapons
- Modified the pricing formula on weapons based on struct, sharp, and damage
- New functions for showing a weapon's "level" created along same lines
  as previous one for clothing.  Eval weapon to see results.

04-13-99/04-14/99 - Lapsos
- edit, medit and oedit all have a new field 'replace'
  edit replace <desc/extra> <"extra"/"text"> <"text"> <"text">
  medit replace <long/desc> <"text"> <"text">
  oedit replace <long/extra> <"extra"/"text"> <"text"> <"text">
  Will search and replace.
- added a field to evaluate 'room'
  Gives basic information about a room:
  1) Room Light (from weather)
  2) A quick sentance that gives a drift of the sector type.
  3) And if there a ranger it tells them if there in a nature area
     or not.
- added amGroupTank to sessionData to allow players to decide if they
  want to try and 'prevent switching'.
- Finished, and inserted, my ranged charge task:
  charge <direction> <target> <distance>
  Where distance isn't a necessity.
- Reduced task.cc to a series of task_*.cc files to make it easier
  to find/modify the tasks.  task.cc still exists with the base
  task code.

04-09-99 - Lapsos
- Fixed the problem with people getting 'You have enough to be 51'
  messages.
- Added 'show free <mob/obj> <#/all> <#>' option:
  < 53 : Unusable
  < 57 : cannot use /all> and <#> <#> means # and #
  else : <#> <#> means from zone <#> to zone <#>
  Shows free slots, in enabled zones, for free mob/obj
- Added 'stat zone' option.

04-09-99 - Bat
- put materialize and spon.gen. onto tasked

04-07-99 - Bat
- Discovered a number of binary/ascii file read/write discrepencies.
  It appears that rent files were written in ascii, but read in binary.
  I switched a bunch of things to binary read/writes.  Surprising that
  we never had problems from this before.
  - this is what I think Iradel's problem is caused by (still testing).
- attuner crash bug : dying while attuning caused attuner's job pointers
  to be invalid causing problems.  Think I fixed this by simply validating
  the pointers each reentry against the current object_list and character_list

03-26-99 - Lapsos
- Added a check in help to prevent flooding the buffer with helpfiles that
  were much larger than the buffer itself.  Already added into /5.0/
  Moved help/nextversion to help/lapnextversion because it was crashing us,
  due to prior problem.  Didn't do a reboot on prod, players were wanting to
  wait on it.

03-24-99 - bat
- put in AFF_STUNNED.  it works similar to AFF_PARALYSIS with slightly
  different messages.  AFF_STUNNED is only being set by doorbash and
  is mostly for just the slamintowall case (stunned with positive HP)
  POSITION_STUNNED also exists and is for the hp = -3 to 0 case
- made murder skills set victim hating doer (on success or failure)

03-15-99 - Bat
- put a thing in loadRent to flip the order of inventory.  currently, it
  reverses itself each log in/log out.

03-15-99 - Bat
- Looks like the lib related problems are fixed, but we wound up reverting to
  old gnu libs.  Kane has a problem ticket opened with gnu/egcs about this.
- Modified the rebooter script to work in new environment.  changed ps flags
  to "auxw" (added w for wide display) as "ps auxw" was showing the pid as
  "/mud/prod/sn" due to screen truncation and endlessly rebooting us.

03-15-99 - Bat
- Some weird thing going on with new libs:
  initRace is returning a valid Race * but apparently what is being 
  assigned to Races[] is garbage.  I added copy ctor and copy operator
  for Race (untested)
- The new libs seem to have turned up 2-preexisting problems.  Functions
  that return char * and do something like: return foo.c_str() to get it
  are apparently bad.  I found this before with the redBold() stuff.
  two_arg() and movementType() are both examples that I had to change today
  as a result.
- found another way items go over max exist and fixed it:
  char logs in, saves then allows himself to idle timeout
  the timeout was causing player to have items deleted (lowering count)
  even though items were saved in the rent file.  An improperly low
  counter let items reload on mobs during that boot.  Next boot the counter
  would show the true count.
- The idle-timeout handler seemed hokey too.
  we would move being to ROOM_DUMP, and drop all "stuff"
  thus inventory was being cleaned up by room_dump proc
  equipment however would fall through numerous checks and ultimately also
  be moved to room as part of ~TBeing() (but basically because !stuff existed).
  I modified dropItemsToRoom() so that a parameter can be sent to actually
  delete the items therein (rather than the dump doing it).
  Also, the old dropItemsToRoom only operated on inventory, which seemed silly
  so now it moves equipment into inventory and does same logic as before.

03-11-99 - Bat
- Fixed the crash problem I accidentally left in the rent stuff.
  Use to store a byte for affected->location in objAffData, and accidentally
  changed it to applyTypeT.  To get around this I have objAffData use an
  applyTypeT for location and objAffData is a member of TObj.  However, there
  is also a rentObjAffData that looks like objAffData but stores a byte.
  rentObject uses rentObjAffData and makes some conversions back and forth
  on read/write.  This seems better since it fixes the problem and also
  disassociates the structure we save from the one we use in the actual mud,
  allowing for optimizations without requiring a convert.
- Also had to create saveAffectedData to model affectedData in binary format.
- As part of the above fix, I started to develop convert_rentfile.cc.  I think
  I got it working OK, but wound up realizing what I wanted to do was better
  done WITHOUT a convert.  Anyway, a rentfile converter is now in the 
  /mud/convert directory.
- modified the sweeper special proc to be more proactive about locating
  garbage, and cleaning it up.  Sweepers actively look for clutter, and
  track to that room to clean it up.

03-10-99 - Bat
- added doMortalQuest command (syntax: quest) as a proof-of-concept for
  showing current quest tasks to players.
  I mapped the avenger quest and added what I think is appropriate statements
  for that quest
- TObj::isSimilar will loop through affects and verify both objs have similar
  affect stuff.  enhanced weapon was clustering with non-enhanced ones.
- deleted README prior to 10/1/98
- changed APPLY_xxx to an enum

03-09-99/03-10-99 - Lapsos
- Added some code to give tanks a chance to prevent mob switching.  Depends on
  Tank[Switch/Rescue skills] and Monster[Switch/Rescue skills].  Should not be
  very common success but added a temporary log 0 to track it.
- Fixed a problem in the vlogf for the prior entry that got blocked and switched
  backwards.

03-09-99 - Bat
- Changed Laps XP-tnl stuff to not call ExpClassLevel every time prompt
  is shown as it is very resource intensive (recursive).  Added 
  promptData::xptnl to store.
- Changed TDrinkCon to have a TBaseCup which handles mostly the sip/pour/drink
  routines that apply to drink cons, vials, pools, etc.  TDrinkCon, TPool and
  TVial now derive from TBaseCup.  Functionality moved around and semi altered
  as previously everything derived from DrinkCon and had to override sometimes
- Switched DISC_xxx to enum

03-07-99 - Lapsos
- Modified doJunk to prevent junking bags with contents If they have
  AUTO_POUCH set.

03-05-99 - Lapsos
- added auto-target/auto-bleeding-limb code to doBandage.
- added PROMPT_EXPTONEXT_LEVEL, it uses the PROMPT_EXP color for coloring.

03-05-99 - Bat
- swapped sectorType to an enum.  Added mapping function between tiny numbers
  and enum values

03-02-99 - Bat
- found we had two very similar functions, doStart() called post-MOTD if 
  max-level = 0, and initChar, called as part of the creation stuff.  Since
  there was no clear reason why we had both, i got rid of initChar and
  moved functionality into doStart().

03-02-99 - Bat
- Did some experimentation with stdlibc++ string class vs "const char *".
  Use of the "string" adds significant time to compile.  Truly static strings
  that we are passing around seem to be much more efficient if we decalre them
  as "const char *", or "const char * const" depending on usage.

03-01-99 - Bat
- Added enum for dirTypeT which covers DIR_NORTH through DIR_SOUTHWEST
  and added it to a bunch of appropriate functions.
- there is also a getDirFromCmd() which maps CMD_NORTH to DIR_NORTH, etc. 

02-28-99 - Mithros
- Woohoo, added CMD_DIG & CMD_COVER to be used in special door procs.
  (I know I know, not a big deal but I was proud of it :P)

02-25-99 - Lapsos
- Fixed a problem with un-skinnable corpses reporting they were
  'being skinned' already.

02-17-99 - Brutius
- Made listserver option work correctly 

02-13-99 - Lapsos
- Fixed the 'switch into mob and mob dies and you are still flagged as
  switched' problem.

02-04-99 - Peel
- Added anonymous flag

02-03-99 - Batopr
- Moved slot_chance array from one based on race to based on body type.

02-02-99 - Batopr
- Put a check for victim's getProtection() (sanct) inside of willKill
  This seems to be how backstab says it killed but doesn't.

02-01-99 - Batopr
- Switched combat around to avoid use of "rounds".  Basically, perform_violance
  and in turn TBeing::hit(vict) get called EACH pulse, but inside hit(), we
  split my per round hits over the number of pulses in a round so that swings
  are taken every so often.
  Spammy as hell, but wicked cool.
  I'm putting it inside of "TestCode" check since I'm not sure it's really a
  good thing yet or not.

01-31-99 - Peel
- created getExpSharePerc and converted the group output to use it (to
  show exp share as a percentage)

01-29-99/01-30-99/01-31-99 - Lapsos
- Redid the way list is handled for shops.  Added the ability to list by
  'glowing' and 'shadowy' and setup a large bv to hold:
    fit, glowing, shadowy, slash, pierce, blunt, body, finger, wrist, legs,
    arms, neck, feet, hands, head, back, waist
  Still understands price range and specific item listing but also allows
  that in conjunction with the above types.
- Modified the score output.  Added max hit/mana(if applicable)/move,
  and a few other fields.
- Fixed a few output bugs in ansi.cc.
- Finished the line option for edit.

01-27-99 - Batopr
- changed definition of isRare() so that is pulls value from obj_index rather
  then using price on object.  Same modification to noteLimitedItem.  Doubt
  this has any effect, but is cleaner and more assured of an item being
  consistently rare or not rare.

01-27-99 - Lapsos
- Modified doSearch and task_search to allow:
  search north
  single exit searching.

01-23-99 - Bat
- Returned class descriptions to doWho for all.  Player friendliness trumps
  reality.

01-23-99 - Lapsos
- Modified oedit to have base edit like abilities.
- Modified medit to have base edit like abilities.

01-21-99 - Bat
- expanded and reorganized the economy statistics we collect (info gold) so
  that its per level now.
- Threw in gold_modifier value for each of the economic areas.  I'm hoping
  to let this be a self-correcting value that will keep economy in tune.
- gold_modifier[SHOP] is now a multiplier for the price the shops buy items
  at.  It should be automatically raised/lowered such that shops serve as
  a slight drain of money from the economy.

01-18-99/01-19-99 - Lapsos
- Finished the edit changes.  Added the copy field.
- Modified the 'mob too low level for armor' error message to equip the
  item then check item level against the mobs new real level.
- Modified whisper so a thief can 'over hear' the whisper if they are
  spying and are >= to the whispering persons level.
- Modified look so a spying thief can be detected by other thieves if >=
  to the lookers level.  Mobs with scrying will also detect it, and act
  upon it(as if the spyer wasn't spying).

01-16-99 - Peel
- Added resize <object> race <race number>.  My intention is that resizing
  for a player is for a quest reward or something, and resize race is a
  building aid.
- resize won't change the short description anymore, also resize is now
  usuable on oed loaded items.
- oed load shows the name of the object you loaded
- oed loaded objects that have price set to -1 will be set to the suggested
  value.  This is only useful for people with machine access who want to
  semi-quickly set suggested prices on a lot of eq.
- Added 'X' and 'Z' zonefile commands, see zonefile book for details.

01-16-99 - Lapsos
- When adding an AC apply, through oedit, it will replace the first
  APPLY_ARMOR it finds with the new value, or add one if one isn't found.

01-15-99 - Peel
- added show materials and material <number>

01-15-99 - Bat
- shops now recycle items VERY slowly
- objs switched over to new AC system

01-15-99 - Lapsos
- Alot of changes to the edit command, majority are un-seen by builders.

01-14-99 - Bat
- started conversion to +/-1000 scale for AC.  Code should be converted to
  handle.  Tiny.mob is converted to be 1000 scale.  
  Obj eq is still old style, but is scaled up on read/write pending work.

01-14-99 - Lapsos
- Modified 4 of the sendTo lines in info.cc for symbols to give
  newlines.
- Made a series of modifications to the edit command:
  Redit with any arguments will be passed onto edit.
    Mainly for our future builders.
  fs has been split into flags and sector_type
  flags now supports a varity of abilities:
    edit flags              :: Display all flags and there current state
    edit flags #            :: Will toggle flag #, non bv.
    edit flags rawbv #      :: old style edit fs # --
    edit flags ??? <on/off> :: Will try and find a string match for ???
                               and toggle it, or force it <on/off>
  edit sector_type without any arguments will display all possible
    sector types.
  Added edit type 'height' for room height.
    With logical auto-toggling of the INDOORS flag and lighting.
  Renamed tunn to max_capacity

01-13-99 - Bat
- traced through engage code to figure out reason for "too few people
  attacking" log.  think i fixed it, but haven't tested.

01-13-99 - Lapsos
- Modified the display of immortal long descriptions.  Now:
  If the owner of the longdescr is a pc, there name is not in
  there longdescr, person who is looking is an immortal, the
  person who is looking is Also a pc(redundant perhaps), and:
  looker is a level8 god or up Or looker is higher level than
  the owner of the longdescr.  If the if returns true, we add
   (owner name) to the end of the line.
- Modified show_me_to_char() for TObj and TBeing to replace
  $g and $$g with 'describeGround()' for long descriptions.
- Added conceal off/stop functionality to doConceal.

1-12-99 - bat
- added function listAccount that combines functionality of doAccount,
  doAccess and 'l' from main menu under a simplified function.

01-12-99 - Lapsos
- Added SKILL_SKIN to getTypeImmunity().
- Fixed a bad return in my TOrganic::objectSell code.
- Modified the sellMe/valueMe code for hides so if the shopkeeper
  already has 100 of a hide type they will only give 25% of the
  normal selling value.
- Added a check in doSplit if argument != numerical to allow
  splitMe() splitting of hides.
- Added a check to the hacked crit to not insta-kill if:
  hitter not using a weapon, hitter height * 3 < victim height,
  hitter not diabolic, and hitter not a lycanthrope.
  Will instead apply hitter level * 3 hp of damage.

01-11-99 - Lapsos
- Modified the tank prompt addition for ansi term users so it has
  a little color in it.

01-10-99 - Bat
- switched CMD_xxx to an enum

01-10-99 - Lapsos
- Returning from being switched will remove the switched flag again.
- Search is now a task.
- Skinning has been completely redone.
- Added a check in doPractice to allow prac hth for hand to hand.

01-09-99 - Lapsos
- Fixed a crash bug in offense.cc:chlorineEngulfed()
- Modified bmake.pl so it'll use the makefile rules instead of
  it's local ones.  No more need to change it if you make changes to
  the makefile.
- Added CMD_WIZNEWS to the utility check on task, so it can be used
  while in task.
- Modified divination to not work for immortals.
- Added a check in doUnlock so it will ignore keys.
- Added a check in doLock so it will also ignore keys.
- Fixed change(mortal change hands) so it works as expected.
- Fixed typo in kneestrike that was reporting thigh hits as the mobs sex.

01-07-99 - Bat
- Added stuff to compile with insure (a memory and bounds checker).
  If you want details, check out www.parasoft.com/products/insure/index.htm
  This adds a ton of overhead to the code, and really bogs down execution.
  I'm not sure we can use it for the actual production site full time, but
  it's probably in our interest to occasionally run prod with insure code to
  track down errors.
  I am currently going through the errors that I can quickly generate and
  fixing them.

01-06-99 - Bat
- added TMagicItem::suggestedPrice() for recommended prices on magic items.
  Fairly naive function:  price = 5% rent credit for the "level" on the scroll
  and uses learnedness to scale (i.e. 50% learning = 2.5% rent credit for
  level).  If spell is violent, value*2.  If multiple spells, value is sum of.
  If multiple charges, value is multiplied by num of charges.
  I'll let the LOWs look it over and see what modifications are needed before
  forcing prices to suggested amount.

01-03-99 - Bat
- tweaked doWho since it looked like the stuff based on PLR_SWITCHED was
  messed up.

01-02-99 - Peel
- Added task_lightfire for lighting non TLight objects on fire, using tool
  type TOOL_FLINTSTEEL.  

01-01-99 - Peel
- Added ITEM_BURNING and ITEM_CHARRED object flags.
- Added flammability value to materials.

12-31-98 - Bat
- I subclassed indexData into mobIndex and objIndex.  It allows for a bit
  cleaner division of data members.  Also, the initializer is now written
  to parse the objfile or mobfile rather than a generic file.  Since this
  was the case, I made the mobfile index parser be more precise and eliminated
  the section in the boot routine where we load all mobs just to initialize
  the mob_index array.  Cleaner and faster, cool!
  Downside is that we have some redundant code for parsing the mob file
  One that does it for the index initializer, and the read_mob routines
  that sort of presume the index stuff was pre-inited.
- trashed some redundant global ints like top_of_objt in favor of
  obj_index.size() instead.

12-30-98 - Bat
- swapped is_abbrev to a string function
- swapped some doXxx functs to using string too.

12-29-98 - Bat
- Switched some low level ffunctions from const char * to string.  inc:
  objn(), lower(), good_cap(), good_upcap(), nextToken()
- Changed "fileName" on PCorpse to a string.

12-28-98 - Peel
- Switch some spells to be usuable in combat, mostly cleric heals.
- Added counter steal skill to thief looting discipline.

12-27-98/12-28-98 - Lapsos
- Modified the aiSteal function a little.  Now if a PC fails a steal on
  a mob it will check to see if the mob is a thief also.  If the mob
  isn't a thief, normal behavior, if it is a thief then it will give
  a snotty say and leave it at that.
- Modified the consider command for immortals, when using it on mortals
  it will report there current AC and the AC they should have.  Limited
  to Level2 gods and up.

12-26-98 - Peel
- Fixed bad return in kneestrike counter move

12-25-98 - Lapsos
- Added 3 new item classes and item types:
  TOrganic    : ITEM_RAW_ORGANIC : Fabric/Organic    : organic.cc
  TFFlame     : ITEM_FLAME       : Fire/Flame        : flame.cc
  TASubstance : ITEM_APPLIED_SUB : Applied Substance : appliedsub.cc
- Modified the describeObjectSpecifics for corpses to only report when the
  corpse has been skinned or dissected, less spammy this way.
- Added a check in drinkMe to prevent drinking of holy water.

12-24-98 - Bat
- Switched a whole series of functs that returned char * or const char * but
  had a static char buf[] internally.  These are now returning "string" and
  no longer hold the static buf.
  The advantages are 1.) we don't hold that mem statically, 2.) we only need
  enough space for the actual string (rather than an arbitrary array), 3.)
  we switch to using string in more places.  The penalty is that we take the
  runtime hit on a string ctor (big deal) every function call.
  Obviously, this also eliminate the problem of:
    sendTo("%s %s", fname(x), fname(x)) that we've seen before due to
  using a static buf for fname.

12-24-98 - Lapsos
- Changed the kneestrike monk counter move so the monk will kick the
  target in the head, simulating the standard boot to the head, on
  successful counter.
- Quit! 'ing will now destroy all equipment marked newbie except if
  in Donation.
- Added dynamic coloring to exit names on look for mortals, immortals
  will not see any difference unless they go mortal.
- Added describeObjectSpecifics to corpses.  It currently reports if the
  corpse has been skinned/dissected or not.

12-23-98 - Bat
- addToHit was apparently limiting at 0 hp and hitLimit
  prevented drowning from actually killing you addToHit(-5)
  took out the limit, not sure if it will have bad consequences
- To track down CPU% problem, reenabled gprof code.  The output is
  located in /mud/code/junk/gp.txt
- Fixed addToMove to not rely on moveLimit() : big use
- Fixed sunRise and sunSet.  New tiems are now calculated once per day and
  saved.
- Fixed getSkill to only do getDiscipline once per call.
- Fixed getMaxLimbHealth to not call slotChance duplicate times.

12-22-98 - Lapsos
- Added some different messages to junk for material type.  4 new messages
  and the old one now used.
- Fixed it so level8 gods and up can load shopkeepers.  Old way made it so
  no one could load a shopkeeper, regardless if there was one in the world
  or not.  New check still makes sure there isn't already one in the world.

12-22-98 - Bat
- think i fixed those unknown remSkillApplys with no skillApply errors
  1.) was from skillApplys being nulld in ~TBeing() before affected was
  removed.  Then, when affects were removed, it would sometime try to
  modify skillApplys.  2.) was from some old bad code in affectTotal
  that removed an apply twice from an object used as paired.

12-20-98 - Lapsos
- The track/seekwater/trail_seek skills are now all tasked.  Will have to
  keep an eye on the gain of the skills from the changes, so far they seem
  pretty normal.
- Setup TThing::canCarryMe so it doesn't restrict immortals.
- show mobiles and objects will now default to your current rooms zone if
  none is specified.
- Added in tank_other for ansi/vt100 users.  Won't send the prompt to
  client users.

12-19-98 - Peel
- Mages/Clerics/Thieves in mob groups will be rescued by warrior typs in the
  group.
- Elementals owned by mobs won't become unenthralled from lack of mana,
  because mobs don't have real mana.
- Fixed a few bugs related to mob groups, reformGroup etc
- Mob groups are starting to look ok, a warrior, two mages and a cleric all
  from 50-75th level, took out the arch-vampire.

12-19-98 - Lapsos
- fixed a loop bug in remSkillApply

12-18-98 - bat
- fixed a trivial error in remSkillApplies

12-18-98 - Peel
- Added zonefile command 'K', which is a clone of 'C' except that it creates
  groups of mobs instead of master/charmee.  Usage is identical.  I intend to
  work on some group specific mob AI next.

12-17-98 - Cos
- Redid the way we handle equipment and affects that add learning to
  skills.  Its now dont though a linked list called skillApplys based
  in TBeing.  Learning modifications are not directly added to stored
  learning numbers so we can bypass the discipline maximums for the skill.
  Most of the bugs seem to be worked out although periodically getting
  logs of errors with respect to held things on mobs. Im not gonna worry
  about these since I dont see potential for corruption but if anyone
  needs to reverse course suddenly, it can be changed back by changing
  #ifs in affectModify, affectTotal, and getSkillValue.  This will undue
  the changes if something unexpected results.

12-17-98 - Peel
- It's my birthday.  woowoo.
- Suspicious rangers will transform their hands into bear claws.
- Suspicious mages will conjure elementals.
- Wimpy mobs will leave the room if there is a fight going on.
- Warrior mobs will sometimes bash mages or clerics in the pc group it is 
  fighting, instead of the tank.
- Mobs that hear a death cry will become more angry/malicious/suspicious

12-17-98 - Bat
- added function flightCheck() that makes you crash if flying but can no
  longer fly.
- added function hurtLimb which is a quickie method for applying damage to a
  limb, and doing the make-limb-useless stuff.  Lastly, does a flightCheck().
- Removed the assignDiscipline calls from the getSkill getDisc calls
  Seems to make sense that getSkill and doesKnowSKill would take a const
  TBeing, so assigning within the get is bad idea.
- Removed most of the other assignDisc calls.  With our "dynamic skill
  create", we are still getting 75-85% of mobs having skills.  I cleaned
  up a lot of the code by removing the checks for if (ch->discs) all over
  and just put the assignDisc once inside read_mob.
  from INFO NUM: Beings with initialized disciplines: 5096 of 6765 (75%)

12-16-98 - Lapsos
- Modified the show rooms command so that without a specified zone it
  will default to your current one.
- Added another output item to oedit for clothing items.  'Real Level'
  will display what the items real level is considered as.
- Combined the 3 Ranger 'walk' skills into a single skill 'hiking'.
- Mobs will no longer auto-loot something they were not tanking.

12-15-98 - bat
- More data collection stuff for combat.  c.f. att <person>, games combat

12-15-98 - Peel
- If a cleric mob is fighting and is not tanking, and the tank of the fight
  is a friend (via isFriend()), then the mob will heal the tank.
- Cleric mobs heal themselves when they are wounded and not fighting.
- Mobs are more observant of their group members now and will assist group
  members that are fighting more quickly than other friends.
- Mobs will now "spell up" friends.  isFriend checks group, race, faction,
  level (high levels don't consider low levels to be friends as much) and
  also has a randomizer.  I'm hoping that there are few enough friendly mobs
  out there that this won't have a major impact, but we'll see.  Sanctuary
  won't be casted on others.
- Hunting clerics will attempt to summon or astral to their targets.

12-14-98 - Lapsos
- Added a 2nd argument to the if[L393] in disc_alchemy.cc, eyes of
  fertuman, to make sure we don't give the players the locations for
  youth potions.
- Changed the swallow proc a small bit.  Swallowing mobs will be unable to
  swallow anything that is more than 3x it's size in inches, not feet.
- Added another function to TBeing.  describeOtherFeatures() right now it
  allows a thief, with a learning of >10 in Evaluate, to determine if a
  weapon is usable as a backstabing/stabbing weapon.

12-12-98 - Bat
- Worked up a way to accept and bind the descriptors during the bootup process.
  I also tacked in a thing so that some of the vlog messages we generate
  during bootDb are sent out to all descriptors.  This is strictly so some
  fedback is provided during long boots.

12-11-98 - Bat
- Put in an event for shopkeepers on ALIGN_PULSE (very long period) that
  will have items in shop increase 1 struct up to max.  That is, things
  left in shop will slowly repair.
- Put in more information to the sessionData struct to help me look at
  combat.
- I've started splitting up some of our larger .cc files.  Basically, any
  that are over 5K lines ought to get broken up.  You may notice a few new
  .cc files as I split big pieces of code out to their own files.

12-10-98 - Peel
- Fixed a little typo in initChar, Kriebly's name was mispelled as Kreibly.
  Any mortal could have made a character named Kreibly and been instantly
  set to level 59.  Fun. :)

12-07-98 - Peel
- Everything looks good, shop stuff is ready to go.  After it's been in for
  awhile and there's no problems I'll take all those ugly SHOPVECTORS checks
  out.

12-06-98 - Peel
- Change shop stuff (producing, type and mat_type) to vectors.  Converted
  the shopfile and everything looks ok.  I want to go over it a little more
  in depth tomorrow to make sure everything is ok, so I've disabled mvcode
  and mvlow.  In case of emergency, the original shop file is /mud/code/lib/
  tinyworld.shp.bak, and there is a define in shop.h SHOPVECTORS that you can
  set to 0, that should put the original code code back in.  Failing that,
  the original shop.cc and shop.h are in my home directory.

12-04-98 - Batopr
- Worked at switching over to using double for xp.
  There is some sort of corruption that is now occurring, despite me
  running a convert utility on the pfiles.  I will look into it further tonight.

12-02-98 - Peel
- Added keyring.cc and TKeyring object.  It's a type of container that holds
  only keys, will only hold one of each type of key and is automatically
  searched fir keys when you try to unlock something, if it is in your 
  inventory.
- ItemInfo was indexed by number (ItemInfo[49] = new ...) so I redid it to 
  use the defines (ItemInfo[ITEM_KEYRING]).  My fingers are sore heh.

11-30-98 - Batopr
- I added two commands, compare and testfight, to aid my testing.  I won't
  emphasize them since the first is fairly trivial, the second is very
  resource intensive.
- Removed MINI, MAXI, MIND and MAXD macros in favor of Ansi C++ min() max()
  template functions.
- Fixed bmake script so it won't make if a make is in the process list.
  This gets rid of the bmake.lock stuff and I think is cleaner.

11-25-98 - Brutius
- Redid how immortal files save. They were saving as 3 lines of text, and
  I made it a class with saves and reads via fwrite and fread, so that we
  can save null strings without multiple checks. This allows us to save the
  wiz files whether or not the immortal has bamfin/bamfout.

  This isn't tested yet, need to do full compile (2:14 EST 11/25) before I
  can test it.

11-23-98 - Peel
- I changed the ground fighting penalties to be level based for mobs (still
  flat -5 for pc's) and took out the total avoidance thing.  The formula is 
  10-(level/10).  The idea being that bash is effective at lower levels,
  but not as effective at higher levels but *still usuable*.  I think this
  is a much more satisfying solution for players.  The formula probably needs
  tweaking, I was pretty liberal, considering that it was originally -20.
  Let me know if there is a problem with any of this.

11-23-98 - Brutius
- Took out the component merge stuff until it can be rethought and recoded

11-19-98 - Peel
- Added a lockfile for bmake.  The only problem is that the bmake job
  now returns the exit code for the removing of the lockfile, instead of
  the make process.  No big deal, just a little bit annoying.  Anyone know
  csh well enough to fix it?  The little shell scripting I know is bash.
- Added genericWeaponProcCheck in spec_objs.cc, it does some generic checks
  that all weapon procs do and does a trigger chance check.  Reduces cut and
  pasting when you make new weapon procs.

11-16-98 - bat
- Created bash.cc
  Moved the flatout deny checks from bash() into canBash() which use to be
  just a bodytype check.  This allows the fighterMove() code to better 
  pick an attack.
- created TBeing::percModifier which replaces the code that was doing
  xxx *= (int) getperc + 100
  xxx /= 200;
  Does the same thing, but puts it in a central place for easier modification.

11-16-98 - bat
- After loking at some spellcode, it appears many of our spells handled
  crits poorly.  basically, critSuccess() returns CRIT_S_KILL, TRIPLE,
  DOUBLE, NONE.  Most of the switches were picking up DOUBLE, but ignoring
  TRIPLE and KILL.  This essentially says that if you roll REALLY REALLY well,
  you don't get a crit.  I thought this was dumb and probably a mistake so
  fixed up a bunch of them.  ditto for critFailure.
  Net effect is that the chance of crits has risen for some spells.

11-12-98 - bat
- Put some stuff for a new mage spell inside questcode trap, don't enable it
- Added a function hideThisSpell(int spell).  It basically was to let me
  centralize the above questcode trap, but it seems a much more efficient
  place for things like !discArrray[spell] !*discArray[spell]->name etc.
  I stuck it in a bunch of places.
- Converted CompInfo to a vector, got rid of MAX_COMPONENTS define

11-11-98 - bat
- Found what I think was a big memory leak in board stuff.  I suspect every
  multiplly loaded board leaked all its memory for writer, msg and header.
  I fixed this.
- mud_str_dup now doesn't limit itself to MAX_STRING_LENGTH for
  strings.  (not sure why it did).
- page_string also had the MAX_STRING_LENGTH limit removed, there was
  no reason for it.
- switch shoping_list to use a vector rather than a fixed array for the
  items.  This lets it be of any size which is especially true if you walk into
  the armorer in GH and prompted the above two changes.

11-09 - Peel
- created clericHolyWaterLoader.  May want to check the levels I set for
  which holy water is loaded.

11-05 - Bat
- getting pretty close with the xp formula, not perfected yet, but ready
  for some dry runs in production.

  Most significant problem currently is in the non-warrior classes.  I
  haven't figured out a good solution yet, and currently all mobs are
  evaluated as if they are warriors.  That is, since non warriors have
  lower stats, they are rated as a lower level then they truly are and
  hence have less xp then they are worth.

10-24-98 - Peel
- created shamanComponentLoader and set everything up so that rangers and 
  mages and shamans load their own comps
- put a chance in clericSymbolLoader to load higher level syms.  We might
  consider upping the level of syms on mobs in general.  25th level clerics
  are using silver syms, but they load on level 62+ mobs.  Anyway, I thought
  a little variation in the loads would be nice.
- nudged mage and ranger component loads up a little bit

10-21-98 - Peel
- Put stuck in foot and ounces of blood lost in setToZero so they initialize
  properly.
- Move incrementor for ounces of blood lost to dropBloodLimb so that it's more
  accurate and gets things like severing and the initial bleeding.

10-20-98 - Peel
- Chi should be fixed now.  I seperated chi self and chi victim so that
  returns won't get confused.  This was just bad design on my part I guess.

10-19-98 - Bat
- fixed ensorcer so you can't charm linkdeads

10-18-98 - Bat
- fixed soome bad returns in chi so deletes work properly

10-17-98 - Bat
- Did some of Mith's specs
- Added OBJECT_HIT obj-spec event to complement OBJECT_HITTING.  Basically
  OBJECT_HITTING is a pre-hit spec (for denying hit, or overriding oneHit).
  OBJECT_HIT is a post-hit spec (for extra damage).
- made some adjustments on how actions (socials) are processed
  changed it from a vector to a map, so find_action will respond faster
  also, the actions file use to store the command number in it
  this caused problem when moving commands around
  so now, it stores the string (e.g. "smile") and does a lookup at
  boot time to get the command number.

10-16-98 - Bat
- Tweaked the FRACT formula used to shave off xp if killing below level.
  It use to always reward at least 25% of xp, changed to be only 5%
  Also, it use to figure based on raw level difference, this is now scaled
  based on level (5 level difference at L25 is 10 lev diff at L50...)
  This latter change is targetted at the mid level (L10-L30) plowers.
- I may add in a class-based tweak to this so mages can tackle slightly 
  lower critters than warriors, but not sure yet.
- I'm still somewhat concerned about the 5:1 ration of mob damage taken
  to PC damage taken (gamestat combat).  I think the above change will address
  this.

10-15-98 - Cos
- Converted addObjs to new format and fixes (named newAddObjs for now)

10-15-98 - Bat
- centralized the "nothing happens" text to allow more variety.
  cleric prayers should call TBeing::deityIgnore and mage spells should
  call TBeing::nothingHappens.  Both functions take a bool that allows
  the "nothing happens" text to be suppressed for TO_CHAR (it is default false)

10-14-98 - Cos
-  Fixed up addMobs and renamed it to newAddMobs for testing.
   It will handle out of order mobs, the stripping of bits should
   work right now, and messages are better. Will fix up addObjs if 
   this works ok.

10-14-98 - Bat
- added a func, swapToStrung, that adds the STRUNG bit to the mob/obj
  and takes a copy of the appropriate strings for the now strung mob.

10-12-98 - Bat
- disabled peel's aggro thing (10/11).  Fixed some of the logic since it
  basically had anger/malice had anger/malice head up/down randomly, but
  once a direction was chosen, it would continue to go in that dir.
- disabled the imm-eq thing in rent.  Something is allowing items to exceed
  max, and I am trying to isolate.

10-11-98 - Peel
- All mobs without the aggressive flag will tend to become less angry and 
  malicious.  This is exactly what previously took place on in gh, I just
  commented out the gh part so it's global.  I'm tired of reloading quest
  mobs and dealing with people complaining about aggros when we stay up for
  more than 24 hours.  This may not be the best fix, but it's better than 
  nothing.

10-09-98 - Bat
- Mucked with some racial stuff in regards to limb used to hit with
  (a textual thing for combat).
  I got rid of the RaceInfo array, and am moving toward using body type
  to get this info.
- switched ShopPriceIndex to a vector (from an array of size 3000)
  also reset the prices on prod since it looks like the array had been
  corrupted a few weeks back

10-08-98 - Bat
- removed str_cmp and str_n_cmp functions
  these were essentially the same as strcasecmp and strncasecmp which is
  what they were replaced with.

10-08-98 - Cos
- Fixed up the parsing problems with drop and with get from bags. The
  problem with both was in the count and not the order.  Anyhow,
  let me know if the fix caused any problems or didnt fix everything.

10-07-98 - Bat
- added roomDirData::getName() that returns fname(keyword) or "door"
  replaced appropriate places in code with this macro

10-06-98 - Bat
- added two career stats, hit_level40 and hit_level50.  Neither is currently
  shown to PCs, but will reveal on an immortal att of the player.  No effect
  yet other than they get set as they level thru L40 and L50.  Ultimately, will
  probably be used to help encourage a player to retire.  i.e. gives some
  idea how long player has been at high-level.
- mucking with the caravans again.

10-04-98 - Peel
- Changed all the decayMe so that they don't decay past 0.

10-01-98 - bat
- added function secsToString that takes a time_t and returns a string.
  Basically, it will translate it as "x days, x hours, x minutes, x seconds".
  I am using this function in doWorld to display uptime and gamestats for
  some of the leveling data.

